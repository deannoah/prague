function displayResults(apartment1, apartment2) {
    // Clear previous results
    document.getElementById('apartment1').innerHTML = '';
    document.getElementById('apartment2').innerHTML = '';
    
    // Prepare the animation container
    const animationContainer = document.createElement('div');
    animationContainer.className = 'animation-container';
    animationContainer.style.position = 'fixed';
    animationContainer.style.top = '0';
    animationContainer.style.left = '0';
    animationContainer.style.width = '100%';
    animationContainer.style.height = '100%';
    animationContainer.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
    animationContainer.style.zIndex = '1000';
    animationContainer.style.display = 'flex';
    animationContainer.style.flexDirection = 'column';
    animationContainer.style.justifyContent = 'center';
    animationContainer.style.alignItems = 'center';
    document.body.appendChild(animationContainer);
    
    // Create animation title
    const animTitle = document.createElement('h2');
    animTitle.textContent = 'Bachelor Party Draw';
    animTitle.style.color = 'white';
    animTitle.style.marginBottom = '10px';
    animTitle.style.fontSize = '28px';
    animTitle.style.textShadow = '0 0 10px rgba(255,215,0,0.7)';
    animationContainer.appendChild(animTitle);
    
    // Create animation subtitle
    const animSubtitle = document.createElement('p');
    animSubtitle.textContent = 'Apartment Assignment';
    animSubtitle.style.color = 'gold';
    animSubtitle.style.marginBottom = '20px';
    animSubtitle.style.fontSize = '18px';
    animationContainer.appendChild(animSubtitle);
    
    // Create a container for the draw animation and live apartment assignments
    const drawContainer = document.createElement('div');
    drawContainer.style.width = '90%';
    drawContainer.style.maxWidth = '800px';
    drawContainer.style.display = 'flex';
    drawContainer.style.flexDirection = 'column';
    drawContainer.style.gap = '20px';
    animationContainer.appendChild(drawContainer);
    
    // Create lottery machine container
    const lotteryContainer = document.createElement('div');
    lotteryContainer.style.width = '150px';
    lotteryContainer.style.height = '150px';
    lotteryContainer.style.backgroundColor = '#333';
    lotteryContainer.style.borderRadius = '50%';
    lotteryContainer.style.position = 'relative';
    lotteryContainer.style.margin = '0 auto 20px';
    lotteryContainer.style.overflow = 'hidden';
    lotteryContainer.style.boxShadow = '0 5px 15px rgba(0,0,0,0.5), inset 0 -10px 20px rgba(0,0,0,0.3)';
    lotteryContainer.style.border = '5px solid gold';
    drawContainer.appendChild(lotteryContainer);
    
    // Create current draw display container
    const currentDrawContainer = document.createElement('div');
    currentDrawContainer.style.width = '80%';
    currentDrawContainer.style.padding = '15px';
    currentDrawContainer.style.backgroundColor = 'white';
    currentDrawContainer.style.borderRadius = '10px';
    currentDrawContainer.style.textAlign = 'center';
    currentDrawContainer.style.fontWeight = 'bold';
    currentDrawContainer.style.fontSize = '24px';
    currentDrawContainer.style.margin = '0 auto 20px';
    currentDrawContainer.style.minHeight = '60px';
    currentDrawContainer.style.display = 'flex';
    currentDrawContainer.style.alignItems = 'center';
    currentDrawContainer.style.justifyContent = 'center';
    currentDrawContainer.textContent = 'Drawing...';
    drawContainer.appendChild(currentDrawContainer);
    
    // Create apartments display container (side by side)
    const apartmentsDisplayContainer = document.createElement('div');
    apartmentsDisplayContainer.style.display = 'flex';
    apartmentsDisplayContainer.style.width = '100%';
    apartmentsDisplayContainer.style.gap = '20px';
    drawContainer.appendChild(apartmentsDisplayContainer);
    
    // Create apartment 1 live display
    const apt1Container = document.createElement('div');
    apt1Container.style.flex = '1';
    apt1Container.style.backgroundColor = 'rgba(67, 97, 238, 0.9)';
    apt1Container.style.borderRadius = '10px';
    apt1Container.style.padding = '15px';
    apt1Container.style.color = 'white';
    apt1Container.style.maxHeight = '300px';
    apt1Container.style.overflowY = 'auto';
    apartmentsDisplayContainer.appendChild(apt1Container);
    
    // Create apartment 1 header
    const apt1Header = document.createElement('h3');
    apt1Header.textContent = 'Apartment 1';
    apt1Header.style.textAlign = 'center';
    apt1Header.style.marginBottom = '10px';
    apt1Header.style.fontSize = '20px';
    apt1Header.style.borderBottom = '2px solid white';
    apt1Header.style.paddingBottom = '5px';
    apt1Container.appendChild(apt1Header);
    
    // Create apartment 1 list
    const apt1List = document.createElement('ul');
    apt1List.style.listStyleType = 'none';
    apt1List.style.padding = '0';
    apt1List.style.margin = '0';
    apt1List.id = 'liveApt1List';
    apt1Container.appendChild(apt1List);
    
    // Create apartment 2 live display
    const apt2Container = document.createElement('div');
    apt2Container.style.flex = '1';
    apt2Container.style.backgroundColor = 'rgba(247, 37, 133, 0.9)';
    apt2Container.style.borderRadius = '10px';
    apt2Container.style.padding = '15px';
    apt2Container.style.color = 'white';
    apt2Container.style.maxHeight = '300px';
    apt2Container.style.overflowY = 'auto';
    apartmentsDisplayContainer.appendChild(apt2Container);
    
    // Create apartment 2 header
    const apt2Header = document.createElement('h3');
    apt2Header.textContent = 'Apartment 2';
    apt2Header.style.textAlign = 'center';
    apt2Header.style.marginBottom = '10px';
    apt2Header.style.fontSize = '20px';
    apt2Header.style.borderBottom = '2px solid white';
    apt2Header.style.paddingBottom = '5px';
    apt2Container.appendChild(apt2Header);
    
    // Create apartment 2 list
    const apt2List = document.createElement('ul');
    apt2List.style.listStyleType = 'none';
    apt2List.style.padding = '0';
    apt2List.style.margin = '0';
    apt2List.id = 'liveApt2List';
    apt2Container.appendChild(apt2List);
    
    // Create lottery balls (will be animated during the draw)
    const ballColors = ['#4361ee', '#f72585', '#4cc9f0', '#7209b7', '#3a0ca3', '#4895ef'];
    const balls = [];
    
    for (let i = 0; i < 10; i++) {
        const ball = document.createElement('div');
        ball.style.width = '30px';
        ball.style.height = '30px';
        ball.style.backgroundColor = ballColors[i % ballColors.length];
        ball.style.borderRadius = '50%';
        ball.style.position = 'absolute';
        ball.style.transform = `translate(${Math.random() * 100 - 50}px, ${Math.random() * 100 - 50}px)`;
        ball.style.transition = 'transform 0.3s';
        balls.push(ball);
        lotteryContainer.appendChild(ball);
    }
    
    // Interleave names from apartment1 and apartment2 for alternating display
    const interleavedNames = [];
    const maxLength = Math.max(apartment1.length, apartment2.length);
    
    for (let i = 0; i < maxLength; i++) {
        if (i < apartment1.length) {
            interleavedNames.push({name: apartment1[i], apartment: 1});
        }
        
        if (i < apartment2.length) {
            interleavedNames.push({name: apartment2[i], apartment: 2});
        }
    }
    
    // Shuffle the interleaved names to randomize the order of the draw
    for (let i = interleavedNames.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [interleavedNames[i], interleavedNames[j]] = [interleavedNames[j], interleavedNames[i]];
    }
    
    // Animation function
    const animateNames = (index) => {
        if (index >= interleavedNames.length) {
            // Animation complete
            setTimeout(() => {
                // Update text to show completion
                currentDrawContainer.textContent = 'Draw Complete!';
                currentDrawContainer.style.backgroundColor = '#4cc9f0';
                currentDrawContainer.style.color = 'white';
                
                // Add a "Continue" button
                const continueBtn = document.createElement('button');
                continueBtn.textContent = 'Continue to Results';
                continueBtn.style.padding = '10px 20px';
                continueBtn.style.marginTop = '20px';
                continueBtn.style.backgroundColor = 'gold';
                continueBtn.style.border = 'none';
                continueBtn.style.borderRadius = '5px';
                continueBtn.style.fontWeight = 'bold';
                continueBtn.style.fontSize = '16px';
                continueBtn.style.cursor = 'pointer';
                continueBtn.style.transition = 'all 0.3s';
                continueBtn.style.boxShadow = '0 4px 6px rgba(0,0,0,0.1)';
                
                continueBtn.addEventListener('mouseover', () => {
                    continueBtn.style.backgroundColor = '#FFD700';
                    continueBtn.style.transform = 'translateY(-2px)';
                    continueBtn.style.boxShadow = '0 6px 8px rgba(0,0,0,0.15)';
                });
                
                continueBtn.addEventListener('mouseout', () => {
                    continueBtn.style.backgroundColor = 'gold';
                    continueBtn.style.transform = 'translateY(0)';
                    continueBtn.style.boxShadow = '0 4px 6px rgba(0,0,0,0.1)';
                });
                
                continueBtn.addEventListener('click', () => {
                    // Remove animation container
                    animationContainer.remove();
                    
                    // Display final results in the main UI
                    apartment1.forEach(name => {
                        const li = document.createElement('li');
                        li.textContent = name;
                        document.getElementById('apartment1').appendChild(li);
                    });
                    
                    apartment2.forEach(name => {
                        const li = document.createElement('li');
                        li.textContent = name;
                        document.getElementById('apartment2').appendChild(li);
                    });
                    
                    // Hide input section and show results section
                    document.getElementById('inputSection').classList.add('hidden');
                    document.getElementById('resultsSection').classList.remove('hidden');
                    
                    // Create confetti effect
                    createConfetti();
                });
                
                drawContainer.appendChild(continueBtn);
            }, 500);
            return;
        }
        
        // Animate lottery balls randomly
        balls.forEach(ball => {
            ball.style.transform = `translate(${Math.random() * 100 - 50}px, ${Math.random() * 100 - 50}px)`;
        });
        
        // Current name and apartment
        const {name, apartment} = interleavedNames[index];
        
        // Create selected ball that will emerge from the lottery machine
        const selectedBall = document.createElement('div');
        selectedBall.style.width = '40px';
        selectedBall.style.height = '40px';
        selectedBall.style.backgroundColor = apartment === 1 ? '#4361ee' : '#f72585';
        selectedBall.style.color = 'white';
        selectedBall.style.borderRadius = '50%';
        selectedBall.style.position = 'absolute';
        selectedBall.style.left = '50%';
        selectedBall.style.top = '50%';
        selectedBall.style.transform = 'translate(-50%, -50%) scale(0.5)';
        selectedBall.style.transition = 'all 0.3s';
        selectedBall.style.zIndex = '10';
        selectedBall.style.display = 'flex';
        selectedBall.style.alignItems = 'center';
        selectedBall.style.justifyContent = 'center';
        selectedBall.style.fontWeight = 'bold';
        selectedBall.style.fontSize = '14px';
        selectedBall.textContent = index + 1;
        lotteryContainer.appendChild(selectedBall);
        
        // Ball movement animation
        setTimeout(() => {
            selectedBall.style.transform = 'translate(-50%, 100px) scale(1)';
            
            // Update the current draw container
            setTimeout(() => {
                currentDrawContainer.textContent = name;
                currentDrawContainer.style.backgroundColor = apartment === 1 ? '#4361ee' : '#f72585';
                currentDrawContainer.style.color = 'white';
                
                // Add name to the appropriate apartment list
                const listItem = document.createElement('li');
                listItem.textContent = name;
                listItem.style.padding = '8px 10px';
                listItem.style.margin = '5px 0';
                listItem.style.backgroundColor = 'rgba(255, 255, 255, 0.2)';
                listItem.style.borderRadius = '5px';
                listItem.style.transition = 'all 0.3s';
                listItem.style.transform = 'scale(0)';
                
                if (apartment === 1) {
                    document.getElementById('liveApt1List').appendChild(listItem);
                } else {
                    document.getElementById('liveApt2List').appendChild(listItem);
                }
                
                // Animate the list item appearing
                setTimeout(() => {
                    listItem.style.transform = 'scale(1)';
                    
                    // Remove the selected ball
                    setTimeout(() => {
                        selectedBall.remove();
                        
                        // Move to next name
                        setTimeout(() => {
                            animateNames(index + 1);
                        }, 300);
                    }, 200);
                }, 100);
            }, 300);
        }, 300);
    };
    
    // Start animation
    animateNames(0);
}
